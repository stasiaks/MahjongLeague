#!/bin/sh

if git rev-parse --verify HEAD >/dev/null 2>&1; then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=$(git hash-object -t tree /dev/null)
fi

# Files (not deleted) in the index
files=$(git diff-index --cached --name-only --diff-filter=d "$against")
result=0 # track exit code
if [ -n "$files" ]; then
    for f in $files; do
        # Only report known text files...
        if [ -z "$(git diff-index --cached --stat=1 "$against" "$f" | grep -is '| Bin')" ]; then
            # Only match regular files (e.g. no symlinks)
            # See: https://stackoverflow.com/a/8347325
            if [ "$(git ls-files --stage "$f" | awk '{print $1}' | head -c2 -)" = "10" ]; then
                # Using staged version of file instead of working dir
                # See: http://stackoverflow.com/a/5032436/5343341
                if [ -n "$(git cat-file blob "$(git ls-files --stage "$f" | awk '{print $2}')" | tail -c1 -)" ]; then
                    # Report error
                    if [ "$result" -lt "1" ]; then
                        echo "Error: The following files have no trailing newline:" 1>&2
                        echo '  (use "git commit --no-verify" to ignore this message)' 1>&2
                    fi
                    echo -en "\t" 1>&2
                    echo "$f" 1>&2
                    result=1
                fi
                if [ "$f" == "src/Shared/Authentication.fs" ]; then
                    if git cat-file blob "$(git ls-files --stage "$f" | awk '{print $2}')" | grep "^let clientId = \".+\"" -Eq; then
                        echo "Error: following shouldn't commit nonempty clientId. That's a security risk" 1>&2
                        echo '  (use "git commit --no-verify" to ignore this message)' 1>&2
                        echo -en "\t" 1>&2
                        echo "$f" 1>&2
                        result=1
                    fi
                    if git cat-file blob "$(git ls-files --stage "$f" | awk '{print $2}')" | grep "^let domain = \".+\"" -Eq; then
                        echo "Error: following files shouldn't commit nonempty domain. That's a security risk" 1>&2
                        echo '  (use "git commit --no-verify" to ignore this message)' 1>&2
                        echo -en "\t" 1>&2
                        echo "$f" 1>&2
                        result=1
                    fi
                fi
            fi
        fi
    done
fi

exit $result
